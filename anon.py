import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import (
    Message, InlineKeyboardMarkup, InlineKeyboardButton
)
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import Command

# ==== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ====
BOT_TOKEN = "7945070793:AAESMab7P7IBQVB-AgiJQQtFVm9D1VQuITQ"
ADMIN_CHAT_ID = 1558568390
CHAT_LINK = "https://t.me/+9TrpV2C2UIY0MWEy"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# ==== –°–æ—Å—Ç–æ—è–Ω–∏—è –∞–Ω–∫–µ—Ç—ã ====
class Form(StatesGroup):
    full_name = State()
    birth_date = State()
    location = State()
    diagnosis = State()
    treatment_status = State()
    phone = State()
    referral = State()

# ==== –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" ====
start_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="start_form")]
    ]
)

# ==== –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ ====
user_ids = set()

# ==== –ö–æ–º–∞–Ω–¥–∞ /start ====
@dp.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–∞–Ω–¥–∞ –ê–ù–û ¬´–°–æ–∑–∏–¥–∞–Ω–∏–µ¬ª. üôè\n\n"
        "–í –Ω–∞—à–µ–º —á–∞—Ç–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:\n"
        "üß† –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é\n‚öñ —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é\nü§ù –º–æ—Ä–∞–ª—å–Ω—É—é\n‚úù –¥—É—Ö–æ–≤–Ω—É—é –ø–æ–º–æ—â—å.\n\n"
        "–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É-–æ–ø—Ä–æ—Å.\n"
        "–í—Å–µ –¥–∞–Ω–Ω—ã–µ —è–≤–ª—è—é—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ –∏ –Ω–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.\n\n"
        "–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –¥–∞—ë—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.",
        reply_markup=start_keyboard
    )

# ==== –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" ====
@dp.callback_query(F.data == "start_form")
async def start_form(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(Form.full_name)
    await callback.message.answer("üëâ –í–≤–µ–¥–∏—Ç–µ –§–ò–û:")
    await callback.answer()

# ==== –ê–Ω–∫–µ—Ç–∞ –ø–æ —à–∞–≥–∞–º ====
@dp.message(Form.full_name)
async def form_full_name(message: Message, state: FSMContext):
    await state.update_data(full_name=message.text)
    await state.set_state(Form.birth_date)
    await message.answer("üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:")

@dp.message(Form.birth_date)
async def form_birth_date(message: Message, state: FSMContext):
    await state.update_data(birth_date=message.text)
    await state.set_state(Form.location)
    await message.answer("üèô –ú–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:")

@dp.message(Form.location)
async def form_location(message: Message, state: FSMContext):
    await state.update_data(location=message.text)
    await state.set_state(Form.diagnosis)
    await message.answer("üíä –ó–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ / –¥–∏–∞–≥–Ω–æ–∑:")

@dp.message(Form.diagnosis)
async def form_diagnosis(message: Message, state: FSMContext):
    await state.update_data(diagnosis=message.text)
    await state.set_state(Form.treatment_status)
    await message.answer("ü©∫ –í—ã –≤ —Ä–µ–º–∏—Å—Å–∏–∏ –∏–ª–∏ –Ω–∞ –ª–µ—á–µ–Ω–∏–∏?")

@dp.message(Form.treatment_status)
async def form_treatment_status(message: Message, state: FSMContext):
    await state.update_data(treatment_status=message.text)
    await state.set_state(Form.phone)
    await message.answer("üìû –ù–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")

@dp.message(Form.phone)
async def form_phone(message: Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await state.set_state(Form.referral)
    await message.answer("üì¢ –ö–∞–∫ –≤—ã –æ –Ω–∞—Å —É–∑–Ω–∞–ª–∏?")

@dp.message(Form.referral)
async def form_referral(message: Message, state: FSMContext):
    await state.update_data(referral=message.text)
    data = await state.get_data()

    form_text = (
        "üìù –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"
        f"üë§ –§–ò–û: {data['full_name']}\n"
        f"üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {data['birth_date']}\n"
        f"üèô –ú–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: {data['location']}\n"
        f"üíä –î–∏–∞–≥–Ω–æ–∑: {data['diagnosis']}\n"
        f"ü©∫ –°—Ç–∞—Ç—É—Å: {data['treatment_status']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\n"
        f"üì¢ –ö–∞–∫ —É–∑–Ω–∞–ª: {data['referral']}\n"
        f"\nüîó Telegram: @{message.from_user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}"
    )
    try:
        await bot.send_message(chat_id=ADMIN_CHAT_ID, text=form_text)
        print("–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω—É.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∫–µ—Ç—ã –∞–¥–º–∏–Ω—É: {e}")

    # –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞ –≤ —á–∞—Ç
    chat_button = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚û° –ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç", url=CHAT_LINK)]
        ]
    )

    await message.answer(
        "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—à –∑–∞–∫—Ä—ã—Ç—ã–π —á–∞—Ç üëá",
        reply_markup=chat_button
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_ids.add(message.from_user.id)

    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞—Å—Å—ã–ª–∫–µ
    await message.answer(
        "üßæ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –±—É–¥–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–∞–º –æ –Ω–∞—à–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö.\n"
        "–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –º–æ–∂–Ω–æ, –Ω–∞–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É /stop."
    )

    await state.clear()

# ==== –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ====
@dp.message(Command("broadcast"))
async def broadcast(message: Message):
    if message.from_user.id != ADMIN_CHAT_ID:
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    await message.answer("‚úâÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:")

    @dp.message()
    async def get_broadcast_text(msg: Message):
        count = 0
        for user_id in user_ids:
            try:
                await bot.send_message(chat_id=user_id, text=msg.text)
                count += 1
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        await msg.answer(f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")
        dp.message.unregister(get_broadcast_text)

# ==== –ö–æ–º–∞–Ω–¥–∞ /stop –¥–ª—è –æ—Ç–∫–∞–∑–∞ –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ ====
@dp.message(Command("stop"))
async def stop_notifications(message: Message):
    user_ids.discard(message.from_user.id)
    await message.answer("‚ùå –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã.")

# ==== –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ====
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
